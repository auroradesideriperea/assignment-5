f = open("rosalind_glob.txt", "r")
N = f.readlines()
d = {}

#creating dictionary label : DNA string
for n in N:
    if n.startswith('>'):
        s = ''
        l = n[1:-1]
    else:
        if s == '': s = n
        else: s += n
    d[l] =  s.replace('\n', '')
    
#naming the two strings, maintining dataset order
dS = []
for s in d.values(): dS.append(s)
s,t = dS[0],dS[1]

#importing BLOSUM62 scoring matrix
from Bio.SubsMat.MatrixInfo import blosum62

#function to compute max alignment score using BLOSUM62 and linear gap penalty equal to 5
#meaning a cost of -5 for each gap
def glob(s,t):
    s_m = [[0 for j in range(len(t)+1)] for i in range(len(s)+1)]
    for i in range(1, len(s)+1): s_m[i][0] = i * -5
    for j in range(1, len(t)+1): s_m[0][j] = j * -5
    
    #filling scoring matrix s_m
    for i in range(1, len(s)+1):
        for j in range(1, len(t)+1):
            if (s[i-1],t[j-1]) not in blosum62: #dictionary is lower triangle
                        s_m[i][j] = max(s_m[i-1][j-1] + blosum62[t[j-1],s[i-1]],
                        s_m[i-1][j]-5,
                        s_m[i][j-1]-5)
            else:
                  s_m[i][j] = max(s_m[i-1][j-1] + blosum62[s[i-1],t[j-1]],
                  s_m[i-1][j]-5,
                  s_m[i][j-1]-5)
            
    #last cell is max score
    return s_m[len(s)][len(t)]

print(glob(s,t))
