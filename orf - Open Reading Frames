f = open("rosalind_orf.txt", "r")
_, N = f.readline(), f.readlines()

#naming string
s = []
for n in N: s.append(n[:-1])
dna = ''.join(s)

#reverse complement string
rev = ''
for n in dna:
    if n == 'A': rev += 'T'
    elif n == 'T': rev += 'A'
    elif n == 'C': rev += 'G'
    else: rev += 'C'
revdna = rev[::-1]

#PROT variant so that it returns protein ONLY if stop codon is present
codons_table = { 'UUU': 'F',     'CUU': 'L',     'AUU': 'I', 'GUU': 'V',
    'UUC': 'F',     'CUC': 'L',     'AUC': 'I',     'GUC': 'V',
    'UUA': 'L',     'CUA': 'L',     'AUA': 'I',     'GUA': 'V',
    'UUG': 'L',     'CUG': 'L',     'AUG': 'M',     'GUG': 'V',
    'UCU': 'S',     'CCU': 'P',     'ACU': 'T',     'GCU': 'A',
    'UCC': 'S',     'CCC': 'P',     'ACC': 'T',     'GCC': 'A',
    'UCA': 'S',     'CCA': 'P',     'ACA': 'T',     'GCA': 'A',
    'UCG': 'S',     'CCG': 'P',     'ACG': 'T',     'GCG': 'A',
    'UAU': 'Y',     'CAU': 'H',     'AAU': 'N',     'GAU': 'D',
    'UAC': 'Y',     'CAC': 'H',     'AAC': 'N',     'GAC': 'D',
    'UAA': 'Stop',  'CAA': 'Q',     'AAA': 'K',     'GAA': 'E',
    'UAG': 'Stop',  'CAG': 'Q',     'AAG': 'K',     'GAG': 'E',
    'UGU': 'C',     'CGU': 'R',     'AGU': 'S',     'GGU': 'G',
    'UGC': 'C',     'CGC': 'R',     'AGC': 'S',     'GGC': 'G',
    'UGA': 'Stop',  'CGA': 'R',     'AGA': 'R',     'GGA': 'G',
    'UGG': 'W',     'CGG': 'R',     'AGG': 'R',     'GGG': 'G'}
def prot(mrna):
    result = ''
    for i in range(0, len(mrna), 3):
        symbol = codons_table[mrna[i:i+3]]
        if symbol == 'Stop':
            return(result)
            break
        result += symbol

#translating
mrna1 = dna.replace('T','U')
mrna2 = revdna.replace('T','U')
def orf(mrna1, mrna2):
    proteins = []
    for i in range(len(mrna1)):
        if mrna1[i:i+3] == 'AUG':
            proteins.append(prot(mrna1[i:]))
    for i in range(len(mrna2)):
        if mrna2[i:i+3] == 'AUG':
            proteins.append(prot(mrna2[i:]))
    for p in set(proteins):
        if p != None: print(p)
orf(mrna1, mrna2)
