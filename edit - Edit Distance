f = open("rosalind_edit.txt", "r")
N = f.readlines()
d = {}

#creating dictionary label : DNA string
for n in N:
    if n.startswith('>'):
        s = ''
        l = n[1:-1]
    else:
        if s == '': s = n
        else: s += n
    d[l] =  s.replace('\n', '')
    
#naming the two strings, longest first
dS = []
for s in d.values(): dS.append(s)
dS = sorted(dS, key=len, reverse=True)
s,t = dS[0],dS[1]
    
#dynamic programming solution
import numpy as np #to create matrix of 0s using np.zeros
def edit(s,t):
    #matrix of 0s, axis x is string s & axis y is string t
    size_x = len(s) + 1
    size_y = len(t) + 1
    matrix = np.zeros ((size_x, size_y))
    for x in range(size_x): matrix [x,0] = x
    for y in range(size_y): matrix [0,y] = y

    #compiling the matrix
    #if the letters are equal we take the diagonal value 
    #if the letters are different we take the minimum from the top, diagonal and left cell + 1    
    for x in range(1, size_x):
        for y in range(1, size_y):
            if s[x-1] == t[y-1]: matrix [x,y] = matrix[x-1,y-1]
            else: matrix [x,y] = min(matrix[x-1,y]+1, matrix[x-1,y-1]+1, matrix[x,y-1] + 1)
    
    #edit distance is the bottom right value of the matrix
    return (round(matrix[size_x-1, size_y-1]))

edit(s,t)
